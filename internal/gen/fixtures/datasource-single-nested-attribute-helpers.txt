

func (m exampleDataSourceModel) attributeType(ctx context.Context) attr.Type {
	return types.ObjectType{AttrTypes: m.objectAttributeTypes}
}

func (m exampleDataSourceModel) objectAttributeTypes(ctx context.Context) map[string]attr.Type {
	return map[string]attr.Type{
		"single_nested_attribute": types.ObjectType{
			AttrTypes: SingleNestedAttributeModel{}.objectAttributeTypes(ctx),
		},
	}
}

func (m exampleDataSourceModel) objectNull(ctx context.Context) types.Object {
	return types.ObjectNull(
		m.objectAttributeTypes(ctx),
	)
}

func (m exampleDataSourceModel) objectValueFrom(ctx context.Context, data any) (types.Object, diag.Diagnostics) {
	return types.ObjectValueFrom(
		ctx,
		m.objectAttributeTypes(ctx),
		data,
	)
}

func (m SingleNestedAttributeModel) attributeType(ctx context.Context) attr.Type {
	return types.ObjectType{AttrTypes: m.objectAttributeTypes}
}

func (m SingleNestedAttributeModel) objectAttributeTypes(ctx context.Context) map[string]attr.Type {
	return map[string]attr.Type{
		"nested_bool_attribute": types.BoolType,
		"nested_list_attribute": types.ListType{
			ElemType: types.StringType,
		},
	}
}

func (m SingleNestedAttributeModel) objectNull(ctx context.Context) types.Object {
	return types.ObjectNull(
		m.objectAttributeTypes(ctx),
	)
}

func (m SingleNestedAttributeModel) objectValueFrom(ctx context.Context, data any) (types.Object, diag.Diagnostics) {
	return types.ObjectValueFrom(
		ctx,
		m.objectAttributeTypes(ctx),
		data,
	)
}










